services:
  # Use Supabase CLI to start all Supabase services based on config.toml
  supabase:
    image: supabase/cli:latest
    volumes:
      - ./supabase:/supabase
    ports:
      - "54321:54321" # API
      - "54322:54322" # DB
      - "54323:54323" # Studio
      - "54324:54324" # Inbucket
      - "54327:54327" # Analytics
    environment:
      SUPABASE_ROOT_DIR: /supabase
      # You can pass environment variables to Supabase services
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      # Add other environment variables as needed
    command: start
    networks:
      - portico-network

  # Bridge service connects to Supabase and forwards signals to the engine
  bridge:
    build: ./bridge
    depends_on:
      - supabase
    env_file:
      - ./.env
    environment:
      SUPABASE_URL: http://supabase:54321
      SUPABASE_KEY: ${SUPABASE_ANON_KEY}
      ENGINE_CONTAINER_NAME: engine
      ENGINE_PORT: 8888
    networks:
      - portico-network
    restart: unless-stopped

  # Engine service processes signals from the bridge
  engine:
    build: ./engine
    depends_on:
      - bridge
    env_file:
      - ./.env
    environment:
      POSTGREST_URL: http://supabase:54321/rest/v1
      SIGNAL_HOST: 0.0.0.0
      SIGNAL_PORT: 8888
      NUM_THREADS: 4
      DB_POLL_INTERVAL: 5
    ports:
      - "8888:8888"
    networks:
      - portico-network
    restart: unless-stopped

networks:
  portico-network:
    driver: bridge

volumes:
  postgres_data:
