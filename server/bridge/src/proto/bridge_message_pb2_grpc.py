# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from src.proto import bridge_message_pb2 as bridge__message__pb2

GRPC_GENERATED_VERSION = "1.71.0"
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(
        GRPC_VERSION, GRPC_GENERATED_VERSION
    )
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f"The grpc package installed is at version {GRPC_VERSION},"
        + f" but the generated code in bridge_message_pb2_grpc.py depends on"
        + f" grpcio>={GRPC_GENERATED_VERSION}."
        + f" Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}"
        + f" or downgrade your generated code using grpcio-tools<={GRPC_VERSION}."
    )


class BridgeServiceStub(object):
    """The Bridge service definition"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitServer = channel.unary_unary(
            "/portico.BridgeService/InitServer",
            request_serializer=bridge__message__pb2.ServerInitRequest.SerializeToString,
            response_deserializer=bridge__message__pb2.ServerInitResponse.FromString,
            _registered_method=True,
        )
        self.CreateSignal = channel.unary_unary(
            "/portico.BridgeService/CreateSignal",
            request_serializer=bridge__message__pb2.SignalRequest.SerializeToString,
            response_deserializer=bridge__message__pb2.OperationResponse.FromString,
            _registered_method=True,
        )
        self.CreateAgent = channel.unary_unary(
            "/portico.BridgeService/CreateAgent",
            request_serializer=bridge__message__pb2.AgentRequest.SerializeToString,
            response_deserializer=bridge__message__pb2.OperationResponse.FromString,
            _registered_method=True,
        )
        self.UpdateAgent = channel.unary_unary(
            "/portico.BridgeService/UpdateAgent",
            request_serializer=bridge__message__pb2.AgentRequest.SerializeToString,
            response_deserializer=bridge__message__pb2.OperationResponse.FromString,
            _registered_method=True,
        )
        self.DeleteAgent = channel.unary_unary(
            "/portico.BridgeService/DeleteAgent",
            request_serializer=bridge__message__pb2.AgentRequest.SerializeToString,
            response_deserializer=bridge__message__pb2.OperationResponse.FromString,
            _registered_method=True,
        )


class BridgeServiceServicer(object):
    """The Bridge service definition"""

    def InitServer(self, request, context):
        """Initialize server connection"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateSignal(self, request, context):
        """Handle signal creation"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def CreateAgent(self, request, context):
        """Handle agent operations"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UpdateAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def DeleteAgent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_BridgeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "InitServer": grpc.unary_unary_rpc_method_handler(
            servicer.InitServer,
            request_deserializer=bridge__message__pb2.ServerInitRequest.FromString,
            response_serializer=bridge__message__pb2.ServerInitResponse.SerializeToString,
        ),
        "CreateSignal": grpc.unary_unary_rpc_method_handler(
            servicer.CreateSignal,
            request_deserializer=bridge__message__pb2.SignalRequest.FromString,
            response_serializer=bridge__message__pb2.OperationResponse.SerializeToString,
        ),
        "CreateAgent": grpc.unary_unary_rpc_method_handler(
            servicer.CreateAgent,
            request_deserializer=bridge__message__pb2.AgentRequest.FromString,
            response_serializer=bridge__message__pb2.OperationResponse.SerializeToString,
        ),
        "UpdateAgent": grpc.unary_unary_rpc_method_handler(
            servicer.UpdateAgent,
            request_deserializer=bridge__message__pb2.AgentRequest.FromString,
            response_serializer=bridge__message__pb2.OperationResponse.SerializeToString,
        ),
        "DeleteAgent": grpc.unary_unary_rpc_method_handler(
            servicer.DeleteAgent,
            request_deserializer=bridge__message__pb2.AgentRequest.FromString,
            response_serializer=bridge__message__pb2.OperationResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "portico.BridgeService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers("portico.BridgeService", rpc_method_handlers)


# This class is part of an EXPERIMENTAL API.
class BridgeService(object):
    """The Bridge service definition"""

    @staticmethod
    def InitServer(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/portico.BridgeService/InitServer",
            bridge__message__pb2.ServerInitRequest.SerializeToString,
            bridge__message__pb2.ServerInitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateSignal(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/portico.BridgeService/CreateSignal",
            bridge__message__pb2.SignalRequest.SerializeToString,
            bridge__message__pb2.OperationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def CreateAgent(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/portico.BridgeService/CreateAgent",
            bridge__message__pb2.AgentRequest.SerializeToString,
            bridge__message__pb2.OperationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def UpdateAgent(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/portico.BridgeService/UpdateAgent",
            bridge__message__pb2.AgentRequest.SerializeToString,
            bridge__message__pb2.OperationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def DeleteAgent(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/portico.BridgeService/DeleteAgent",
            bridge__message__pb2.AgentRequest.SerializeToString,
            bridge__message__pb2.OperationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
