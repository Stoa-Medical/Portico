[project]
name = "portico-bridge"
version = "0.1.0"
description = "Python bridge for Portico engine"
authors = [
    {name = "Eric Pan", email= "epan@stoamedical.io"}
]
requires-python = ">=3.9"
dependencies = [
    "asyncio>=3.4.3",
    "dotenv>=0.9.9",
    "python-dotenv>=1.0.1",
    "supabase>=2.13.0",
    # TODO: Remove some of these dependencies (don't think they're used)
    "gotrue>=2.0.0", # Supabase auth
    "postgrest>=0.15.0", # Supabase database
    "storage3>=0.8.0", # Supabase storage
    "supafunc>=0.3.0", # Supabase functions
    "realtime>=1.0.0", # Supabase realtime
    "httpx>=0.24.0", # Required by Supabase SDK
    "grpcio>=1.62.1",
    "grpcio-tools>=1.62.1",
    "protobuf>=4.25.3",
    "result>=0.17.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
# Basic mypy settings
ignore_missing_imports = true
follow_imports = "silent"

# Ignore errors in the protobuf modules
[[tool.mypy.overrides]]
module = "src.proto.*"
ignore_errors = true

# Ignore specific attr-defined errors for src.lib related to protobuf
[[tool.mypy.overrides]]
module = "src.lib"
# Simply ignore all errors in this file
ignore_errors = true

# Add other mypy settings below if needed, for example:
# ignore_missing_imports = true
# follow_imports = "skip" # Or "normal" or "error"

# Example of ignoring specific module errors if needed (use sparingly)
# [[tool.mypy.overrides]]
# module = "some_other_module.*"
# ignore_missing_imports = true

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "types-protobuf>=5.29.1",
    "mypy>=1.8.0",
    "mypy-protobuf>=3.6.0",
]
